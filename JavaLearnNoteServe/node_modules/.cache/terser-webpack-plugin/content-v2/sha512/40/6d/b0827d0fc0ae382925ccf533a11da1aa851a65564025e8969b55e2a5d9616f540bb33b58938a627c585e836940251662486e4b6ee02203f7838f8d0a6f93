{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{346:function(a,e,t){\"use strict\";t.r(e);var s=t(14),r=Object(s.a)({},(function(){var a=this,e=a._self._c;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"java21新特性\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#java21新特性\"}},[a._v(\"#\")]),a._v(\" java21新特性\")]),a._v(\" \"),e(\"p\",[a._v(\"​        Java 21是Java SE 21（JDK 21）的正式名称，它是由OpenJDK社区开发和维护的。Java 21预计将于2024年3月20日发布，是Java 20的继承者。Java 21版本中预计将引入许多新特性和改进，本文将对Java 21的新特性进行预览和解析。\")]),a._v(\" \"),e(\"p\",[a._v(\"Java 21新特性预览表：\")]),a._v(\" \"),e(\"ol\",[e(\"li\",[a._v(\"Pattern Matching for switch（模式匹配for switch）\")]),a._v(\" \"),e(\"li\",[a._v(\"Record Patterns（记录模式）\")]),a._v(\" \"),e(\"li\",[a._v(\"Sealed Classes（密封类）\")]),a._v(\" \"),e(\"li\",[a._v(\"Pattern Matching for instanceof（ instanceof 模式匹配）\")]),a._v(\" \"),e(\"li\",[a._v(\"Foreign Function & Memory API（外部函数和内存API）\")]),a._v(\" \"),e(\"li\",[a._v(\"Vector API（矢量API）\")]),a._v(\" \"),e(\"li\",[a._v(\"Flight Recorder Enhancements（飞行记录器增强）\")]),a._v(\" \"),e(\"li\",[a._v(\"Deprecate the Applet API for Removal（弃用Applet API）\")]),a._v(\" \"),e(\"li\",[a._v(\"Deprecate the RMI Activation Mechanism（弃用RMI Activation Mechanism）\")]),a._v(\" \"),e(\"li\",[a._v(\"Switch Expressions Improvements（switch表达式改进）\")]),a._v(\" \"),e(\"li\",[a._v(\"Enhanced Pseudo-Random Number Generators（增强的伪随机数生成器）\")]),a._v(\" \"),e(\"li\",[a._v(\"Deprecate sun.misc.Unsafe（弃用sun.misc.Unsafe）\")]),a._v(\" \"),e(\"li\",[a._v(\"Deprecate the Nashorn JavaScript Engine（弃用Nashorn JavaScript引擎）\")]),a._v(\" \"),e(\"li\",[a._v(\"Remove the Experimental AOT and JIT Compiler（删除实验性AOT和JIT编译器）\")]),a._v(\" \"),e(\"li\",[a._v(\"Remove the Pack200 Tools and API（删除Pack200工具和API）\")]),a._v(\" \"),e(\"li\",[a._v(\"Remove the Solaris and SPARC Ports（删除Solaris和SPARC端口）\")])]),a._v(\" \"),e(\"p\",[a._v(\"下面对这些新特性进行预览和解析。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"pattern-matching-for-switch-模式匹配for-switch\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pattern-matching-for-switch-模式匹配for-switch\"}},[a._v(\"#\")]),a._v(\" Pattern Matching for switch（模式匹配for switch）\")]),a._v(\" \"),e(\"p\",[a._v(\"​        Java 21中，将继续完善和改进Java 17中引入的模式匹配for switch特性。模式匹配for switch允许开发人员使用模式来匹配switch表达式的值，从而简化代码并提高可读性。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"record-patterns-记录模式\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#record-patterns-记录模式\"}},[a._v(\"#\")]),a._v(\" Record Patterns（记录模式）\")]),a._v(\" \"),e(\"p\",[a._v(\"​        Java 21中，将继续完善和改进Java 16中引入的记录模式特性。记录模式允许开发人员使用记录模式来匹配记录对象的字段。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"sealed-classes-密封类\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#sealed-classes-密封类\"}},[a._v(\"#\")]),a._v(\" Sealed Classes（密封类）\")]),a._v(\" \"),e(\"p\",[a._v(\"​       Java 21中，将继续完善和改进Java 17中引入的密封类特性。密封类允许开发人员限制一个类的子类数量和类型。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"pattern-matching-for-instanceof-instanceof-模式匹配\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pattern-matching-for-instanceof-instanceof-模式匹配\"}},[a._v(\"#\")]),a._v(\" Pattern Matching for instanceof（ instanceof 模式匹配）\")]),a._v(\" \"),e(\"p\",[a._v(\"​       Java 21中，将继续完善和改进Java 16中引入的 instanceof 模式匹配特性。 instanceof 模式匹配允许开发人员使用模式来匹配 instanceof 表达式的值，从而简化代码并提高可读性。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"foreign-function-memory-api-外部函数和内存api\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#foreign-function-memory-api-外部函数和内存api\"}},[a._v(\"#\")]),a._v(\" Foreign Function & Memory API（外部函数和内存API）\")]),a._v(\" \"),e(\"p\",[a._v(\"​       Java 21中，将继续完善和改进Java 19中引入的外部函数和内存API特性。外部函数和内存API允许开发人员在Java中直接调用本地代码和访问本地内存。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"vector-api-矢量api\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vector-api-矢量api\"}},[a._v(\"#\")]),a._v(\" Vector API（矢量API）\")]),a._v(\" \"),e(\"p\",[a._v(\"​       Java 21中，将继续完善和改进Java 16中引入的矢量API特性。矢量API允许开发人员使用向量运算来提高数值计算的性能。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"flight-recorder-enhancements-飞行记录器增强\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#flight-recorder-enhancements-飞行记录器增强\"}},[a._v(\"#\")]),a._v(\" Flight Recorder Enhancements（飞行记录器增强）\")]),a._v(\" \"),e(\"p\",[a._v(\"​       Java 21中，将继续完善和改进Java Flight Recorder（JFR）特性。JFR是一个低开销的 profiling 和 diagnostics 工具，可以用来记录Java应用程序的运行时数据。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"deprecate-the-applet-api-for-removal-弃用applet-api\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#deprecate-the-applet-api-for-removal-弃用applet-api\"}},[a._v(\"#\")]),a._v(\" Deprecate the Applet API for Removal（弃用Applet API）\")]),a._v(\" \"),e(\"p\",[a._v(\"​        Java 21中，Applet API已经被标记为弃用状态，将在未来的Java版本中被删除。Applet API是Java的一部分，用于在浏览器中运行Java小程序。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"deprecate-the-rmi-activation-mechanism-弃用rmi-activation-mechanism\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#deprecate-the-rmi-activation-mechanism-弃用rmi-activation-mechanism\"}},[a._v(\"#\")]),a._v(\" Deprecate the RMI Activation Mechanism（弃用RMI Activation Mechanism）\")]),a._v(\" \"),e(\"p\",[a._v(\"​        Java 21中，RMI Activation Mechanism已经被标记为弃用状态，将在未来的Java版本中被删除。RMI Activation Mechanism是Java远程方法（RMI）的一部分，用于在需要时激活远程对象。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"switch-expressions-improvements-switch表达式改进\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#switch-expressions-improvements-switch表达式改进\"}},[a._v(\"#\")]),a._v(\" Switch Expressions Improvements（switch表达式改进）\")]),a._v(\" \"),e(\"p\",[a._v(\"​        Java 21中，将继续完善和改进Java 14中引入的switch表达式特性。switch表达式允许开发人员使用表达式语法来编写switch语句，从而简化代码并提高可读性。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"enhanced-pseudo-random-number-generators-增强的伪随机数生成器\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#enhanced-pseudo-random-number-generators-增强的伪随机数生成器\"}},[a._v(\"#\")]),a._v(\" Enhanced Pseudo-Random Number Generators（增强的伪随机数生成器）\")]),a._v(\" \"),e(\"p\",[a._v(\"​        Java 21中，将引入增强的伪随机数生成器，允许开发人员生成更加安全和可预测的伪随机数。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"deprecate-sun-misc-unsafe-弃用sun-misc-unsafe\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#deprecate-sun-misc-unsafe-弃用sun-misc-unsafe\"}},[a._v(\"#\")]),a._v(\" Deprecate sun.misc.Unsafe（弃用sun.misc.Unsafe）\")]),a._v(\" \"),e(\"p\",[a._v(\"​       Java 21中，sun.misc.Unsafe已经被标记为弃用状态，将在未来的Java版本中被删除。sun.misc.Unsafe是Java中的一个内部API，用于直接访问JVM内存和原生方法。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"deprecate-the-nashorn-javascript-engine-弃用nashorn-javascript引擎\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#deprecate-the-nashorn-javascript-engine-弃用nashorn-javascript引擎\"}},[a._v(\"#\")]),a._v(\" Deprecate the Nashorn JavaScript Engine（弃用Nashorn JavaScript引擎）\")]),a._v(\" \"),e(\"p\",[a._v(\"​        Java 21中，Nashorn JavaScript引擎已经被标记为弃用状态，将在未来的Java版本中被删除。Nashorn JavaScript引擎是Java 8中引入的JavaScript引擎，用于在Java中执行JavaScript代码。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"remove-the-experimental-aot-and-jit-compiler-删除实验性aot和jit编译器\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#remove-the-experimental-aot-and-jit-compiler-删除实验性aot和jit编译器\"}},[a._v(\"#\")]),a._v(\" Remove the Experimental AOT and JIT Compiler（删除实验性AOT和JIT编译器）\")]),a._v(\" \"),e(\"p\",[a._v(\"​        Java 21中，实验性AOT和JIT编译器已经被删除。这两个编译器是Java 9中引入的实验特性，用于将Java字节码编译为本地代码。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"remove-the-pack200-tools-and-api-删除pack200工具和api\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#remove-the-pack200-tools-and-api-删除pack200工具和api\"}},[a._v(\"#\")]),a._v(\" Remove the Pack200 Tools and API（删除Pack200工具和API）\")]),a._v(\" \"),e(\"p\",[a._v(\"​        Java 21中，Pack200工具和API已经被删除。Pack200是Java 5中引入的工具，用于压缩Java Archive（JAR）文件。\")]),a._v(\" \"),e(\"h2\",{attrs:{id:\"remove-the-solaris-and-sparc-ports-删除solaris和sparc端口\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#remove-the-solaris-and-sparc-ports-删除solaris和sparc端口\"}},[a._v(\"#\")]),a._v(\" Remove the Solaris and SPARC Ports（删除Solaris和SPARC端口）\")]),a._v(\" \"),e(\"p\",[a._v(\"​        Java 21中，Solaris和SPARC端口已经被删除。Solaris和SPARC是Sun Microsystems公司开发的操作系统和处理器，Java曾经为这两个平台提供支持。\")])])}),[],!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}