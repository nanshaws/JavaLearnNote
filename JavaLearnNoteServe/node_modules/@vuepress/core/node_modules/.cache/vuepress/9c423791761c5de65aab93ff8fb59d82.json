{"remainingRequest":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js??ref--3-0!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\docs\\java\\java17.md?vue&type=template&id=1925cf24","dependencies":[{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\docs\\java\\java17.md","mtime":1711771299481},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711681435690},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711681435690},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\babel-loader\\lib\\index.js","mtime":1711681435799},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1711681433456},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711681435690},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\vue-loader\\lib\\index.js","mtime":1711681432999},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1711681435848}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["render","_vm","_c","_self","attrs","$parent","slotKey","id","staticClass","href","_v","pre","class","staticRenderFns","_withStripped"],"sources":["D:/githubWork/githubappearance/JavaLearnNote/JavaLearnNoteServe/docs/java/java17.md"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"ContentSlotsDistributor\",\n    { attrs: { \"slot-key\": _vm.$parent.slotKey } },\n    [\n      _c(\"h1\", { attrs: { id: \"java17新特性\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#java17新特性\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" java17新特性\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"Improvements in Random Number Generator algorithms\"),\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Deserialization filtering\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Modified switch case\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Reflection API for a sealed class\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Vector API\")]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"中文介绍：\")]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\n            \"随机数生成器算法的改进：在Java 17中，对随机数生成器算法进行了一些改进，以提高性能和减少内存占用。这些改进包括使用更高效的算法和优化了随机数生成器的实现。\"\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"反序列化过滤：在Java 17中，引入了一个新的特性，允许在反序列化过程中进行过滤操作。这可以防止恶意代码执行或处理不安全的输入数据。\"\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"修改后的switch case语法：在Java 17中，对switch case语法进行了一些修改，以提供更好的类型安全性和代码可读性。现在可以使用新的switch表达式来简化代码。\"\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"密封类的反射API：在Java 17中，引入了一个新的反射API，用于支持密封类。密封类是一种限制继承的类，通过反射API可以访问密封类的成员和方法。\"\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"Vector API：在Java 17中，引入了一个新的Vector API，提供了更灵活和高效的方式来处理向量计算。这个API包括了一些新的方法，如add、subtract、multiply等。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"h2\",\n        {\n          attrs: {\n            id: \"improvements-in-random-number-generator-algorithms-modified-switch-case\",\n          },\n        },\n        [\n          _c(\n            \"a\",\n            {\n              staticClass: \"header-anchor\",\n              attrs: {\n                href: \"#improvements-in-random-number-generator-algorithms-modified-switch-case\",\n              },\n            },\n            [_vm._v(\"#\")]\n          ),\n          _vm._v(\n            \" Improvements in Random Number Generator algorithms+Modified switch case\"\n          ),\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              'import java.util.Random;\\nimport java.util.Vector;\\n\\npublic class Java17Example {\\n    public static void main(String[] args) {\\n        // 使用改进的随机数生成器算法\\n        Random random = new Random();\\n        int randomNumber = random.nextInt(10);\\n        System.out.println(\"Random number: \" + randomNumber);\\n\\n        // 使用修改后的switch case语法\\n        int day = 3;\\n        String dayName = switch (day) {\\n            case 1 -> \"Monday\";\\n            case 2 -> \"Tuesday\";\\n            case 3 -> \"Wednesday\";\\n            case 4 -> \"Thursday\";\\n            case 5 -> \"Friday\";\\n            case 6 -> \"Saturday\";\\n            case 7 -> \"Sunday\";\\n            default -> \"Invalid day\";\\n        };\\n        System.out.println(\"Day name: \" + dayName);\\n    }\\n}\\n'\n            ),\n          ]),\n        ]),\n      ]),\n      _c(\"h2\", { attrs: { id: \"deserialization-filtering\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#deserialization-filtering\" },\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Deserialization filtering\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              'import java.io.*;\\n\\npublic class DeserializationFilterExample {\\n    public static void main(String[] args) {\\n        // 创建一个包含恶意代码的序列化对象\\n        byte[] serializedObject = createSerializedObject();\\n\\n        // 使用反序列化过滤器进行反序列化\\n        try (ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(serializedObject);\\n             ObjectInputStream objectInputStream = new ObjectInputStream(byteArrayInputStream)) {\\n            objectInputStream.setObjectInputFilter(new ObjectInputFilter() {\\n                @Override\\n                public Status checkInput(FilterInfo filterInfo) {\\n                    if (filterInfo.references() > 0) {\\n                        return Status.REJECTED; // 拒绝包含引用的对象\\n                    } else {\\n                        return Status.ALLOWED; // 允许其他对象\\n                    }\\n                }\\n            });\\n\\n            Object deserializedObject = objectInputStream.readObject();\\n            System.out.println(\"Deserialized object: \" + deserializedObject);\\n        } catch (IOException | ClassNotFoundException e) {\\n            e.printStackTrace();\\n        }\\n    }\\n\\n    private static byte[] createSerializedObject() {\\n        // 创建包含恶意代码的序列化对象\\n        // 示例省略\\n        return null;\\n    }\\n}\\n'\n            ),\n          ]),\n        ]),\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"​        在这个例子中，我们首先创建了一个包含恶意代码的序列化对象。然后，我们使用\"\n        ),\n        _c(\"code\", [_vm._v(\"ObjectInputStream\")]),\n        _vm._v(\n          \"进行反序列化，并设置了一个自定义的反序列化过滤器。在过滤器中，我们检查对象的引用数量，如果大于0，则拒绝该对象；否则，允许其他对象。通过这种方式，我们可以防止恶意代码执行或处理不安全的输入数据。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"reflection-api-for-a-sealed-class\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#reflection-api-for-a-sealed-class\" },\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Reflection API for a sealed class\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              'import java.lang.reflect.Method;\\n\\npublic class SealedClassReflectionExample {\\n    public static void main(String[] args) {\\n        // 获取密封类的方法\\n        Method sealedMethod = getSealedMethod();\\n\\n        // 调用密封类的方法\\n        try {\\n            Object result = sealedMethod.invoke(null);\\n            System.out.println(\"Result: \" + result);\\n        } catch (Exception e) {\\n            e.printStackTrace();\\n        }\\n    }\\n\\n    private static Method getSealedMethod() {\\n        // 获取密封类的方法\\n        // 示例省略\\n        return null;\\n    }\\n}\\n'\n            ),\n          ]),\n        ]),\n      ]),\n      _c(\"h2\", { attrs: { id: \"vector-api\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#vector-api\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Vector API\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              'package org.cyl.spaceutils;\\n \\nimport jdk.incubator.vector.FloatVector;\\nimport jdk.incubator.vector.VectorSpecies;\\n \\npublic class VectorScalarOperations {\\n    public static void main(String[] args) {\\n        // 定义矢量a和b\\n        float[] a = {1, 2, 3};\\n        float[] b = {4, 5, 6};\\n        float[] c=new float[a.length];\\n        VectorScalarOperations v1=new VectorScalarOperations();\\n        long startTime = System.nanoTime();\\n        v1.vectorComputation(a,b,c);\\n        long endTime = System.nanoTime();\\n        System.out.println(\"矢量花费的时间:\"+(endTime-startTime));\\n \\n        long startTime1 = System.nanoTime();\\n        v1.xadd(a,b,c);\\n        long endTime1 = System.nanoTime();\\n        System.out.println(\"标量花费的时间:\"+(endTime1-startTime1));\\n \\n    }\\n \\n    static final VectorSpecies<Float> SPECIES = FloatVector.SPECIES_PREFERRED;\\n    void vectorComputation(float[] a, float[] b, float[] c) {\\n        int i = 0;\\n        int upperBound = SPECIES.loopBound(a.length);\\n        for (; i < upperBound; i += SPECIES.length()) {\\n            // FloatVector va, vb, vc;\\n            var va = FloatVector.fromArray(SPECIES, a, i);\\n            var vb = FloatVector.fromArray(SPECIES, b, i);\\n            var vc = va.mul(va)\\n                    .add(vb.mul(vb));\\n            vc.intoArray(c, i);\\n        }\\n    }\\n \\n    void xadd(float[]a,float[]b,float[]c){\\n        for (int i=0;i<a.length;i++){\\n            c[i] = (a[i] * a[i] + b[i] * b[i]) * -1.0f;\\n        }\\n    }\\n}\\n'\n            ),\n          ]),\n        ]),\n      ]),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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","ignoreList":[]}]}