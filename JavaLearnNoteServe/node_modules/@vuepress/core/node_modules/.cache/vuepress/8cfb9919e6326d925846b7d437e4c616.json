{"remainingRequest":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\docs\\libgdx\\tutorial7.md?vue&type=template&id=acf1d3f2","dependencies":[{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\docs\\libgdx\\tutorial7.md","mtime":1709013092379},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHsKICB2YXIgX3ZtID0gdGhpcywKICAgIF9jID0gX3ZtLl9zZWxmLl9jOwogIHJldHVybiBfYygiQ29udGVudFNsb3RzRGlzdHJpYnV0b3IiLCB7CiAgICBhdHRyczogewogICAgICAic2xvdC1rZXkiOiBfdm0uJHBhcmVudC5zbG90S2V5CiAgICB9CiAgfSwgW19jKCJoMiIsIHsKICAgIGF0dHJzOiB7CiAgICAgIGlkOiAiXzctMS1odHRw6K+35rGCIgogICAgfQogIH0sIFtfYygiYSIsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICBocmVmOiAiI183LTEtaHR0cOivt+axgiIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgNy4xIEhUVFDor7fmsYIiKV0pLCBfdm0uX3YoIiAiKSwgX2MoInAiLCBbX3ZtLl92KCLlnKhsaWJHRFjkuK3vvIzlj6/ku6Xkvb/nlKhIdHRwUmVxdWVzdOexu+adpeWPkemAgUhUVFDor7fmsYLjgILku6XkuIvmmK/kuIDkuKrnroDljZXnmoTnpLrkvovvvJoiKV0pLCBfdm0uX3YoIiAiKSwgX2MoImRpdiIsIHsKICAgIHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIgogIH0sIFtfYygicHJlIiwgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IgogICAgfQogIH0sIFtfYygiY29kZSIsIFtfdm0uX3YoJ3BhY2thZ2UgY29tLm15Z2R4LmdhbWUuaHR0cDtcblxuaW1wb3J0IGNvbS5iYWRsb2dpYy5nZHguR2R4O1xuaW1wb3J0IGNvbS5iYWRsb2dpYy5nZHguTmV0O1xuaW1wb3J0IGNvbS5iYWRsb2dpYy5nZHgubmV0Lkh0dHBSZXF1ZXN0QnVpbGRlcjtcbmltcG9ydCBjb20uYmFkbG9naWMuZ2R4Lm5ldC5IdHRwU3RhdHVzO1xuXG5wdWJsaWMgY2xhc3MgSHR0cEV4YW1wbGUge1xuICAgIHB1YmxpYyBzdGF0aWMgdm9pZCBzZW5kKCkge1xuICAgICAgICBIdHRwUmVxdWVzdEJ1aWxkZXIgcmVxdWVzdEJ1aWxkZXIgPSBuZXcgSHR0cFJlcXVlc3RCdWlsZGVyKCk7XG4gICAgICAgIE5ldC5IdHRwUmVxdWVzdCBodHRwUmVxdWVzdCA9IHJlcXVlc3RCdWlsZGVyLm5ld1JlcXVlc3QoKS5tZXRob2QoTmV0Lkh0dHBNZXRob2RzLkdFVCkudXJsKCJodHRwczovL3d3dy5nb29nbGUuZGUiKS5jb250ZW50KCJxPWxpYmdkeCZleGFtcGxlPWV4YW1wbGUiKS5idWlsZCgpO1xuICAgICAgICBHZHgubmV0LnNlbmRIdHRwUmVxdWVzdChodHRwUmVxdWVzdCwgaHR0cFJlc3BvbnNlTGlzdGVuZXIpO1xuICAgICAgICAvL+acieWPguaVsOeahFxuLy8gICAgICAgIEh0dHBSZXF1ZXN0QnVpbGRlciByZXF1ZXN0QnVpbGRlciA9IG5ldyBIdHRwUmVxdWVzdEJ1aWxkZXIoKTtcbi8vICAgICAgICBIdHRwUmVxdWVzdCBodHRwUmVxdWVzdCA9IHJlcXVlc3RCdWlsZGVyLm5ld1JlcXVlc3QoKS5tZXRob2QoSHR0cE1ldGhvZHMuR0VUKS51cmwoImh0dHBzOi8vd3d3Lmdvb2dsZS5kZSIpLmNvbnRlbnQoInE9bGliZ2R4JmV4YW1wbGU9ZXhhbXBsZSIpLmJ1aWxkKCk7XG4vLyAgICAgICAgR2R4Lm5ldC5zZW5kSHR0cFJlcXVlc3QoaHR0cFJlcXVlc3QsIGh0dHBSZXNwb25zZUxpc3RlbmVyKTtcblxuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIGZpbmFsIE5ldC5IdHRwUmVzcG9uc2VMaXN0ZW5lciBodHRwUmVzcG9uc2VMaXN0ZW5lciA9IG5ldyBOZXQuSHR0cFJlc3BvbnNlTGlzdGVuZXIoKSB7XG4gICAgICAgIEBPdmVycmlkZVxuICAgICAgICBwdWJsaWMgdm9pZCBoYW5kbGVIdHRwUmVzcG9uc2UoTmV0Lkh0dHBSZXNwb25zZSBodHRwUmVzcG9uc2UpIHtcbiAgICAgICAgICAgIGlmIChodHRwUmVzcG9uc2UuZ2V0U3RhdHVzKCkuZ2V0U3RhdHVzQ29kZSgpID09IEh0dHBTdGF0dXMuU0NfT0spIHtcbiAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oIuivt+axguaIkOWKn++8jOWTjeW6lOWGheWuue+8miIgKyBodHRwUmVzcG9uc2UuZ2V0UmVzdWx0QXNTdHJpbmcoKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigi6K+35rGC5aSx6LSl77yM54q25oCB56CB77yaIiArIGh0dHBSZXNwb25zZS5nZXRTdGF0dXMoKS5nZXRTdGF0dXNDb2RlKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgQE92ZXJyaWRlXG4gICAgICAgIHB1YmxpYyB2b2lkIGZhaWxlZChUaHJvd2FibGUgdGhyb3dhYmxlKSB7XG4gICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oIuWksei0pSIpO1xuICAgICAgICB9XG5cbiAgICAgICAgQE92ZXJyaWRlXG4gICAgICAgIHB1YmxpYyB2b2lkIGNhbmNlbGxlZCgpIHtcbiAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbigi5Y+W5raIIik7XG4gICAgICAgIH1cbiAgICB9O1xuXG59XG4nKV0pXSldKSwgX2MoImgyIiwgewogICAgYXR0cnM6IHsKICAgICAgaWQ6ICJ0Y3DpgJrkv6Et5a6i5oi356uvIgogICAgfQogIH0sIFtfYygiYSIsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICBocmVmOiAiI3RjcOmAmuS/oS3lrqLmiLfnq68iCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIFRDUOmAmuS/oe+8jOWuouaIt+erryIpXSksIF92bS5fdigiICIpLCBfYygiZGl2IiwgewogICAgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gZXh0cmEtY2xhc3MiCiAgfSwgW19jKCJwcmUiLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICBjbGFzczogImxhbmd1YWdlLXRleHQiCiAgICB9CiAgfSwgW19jKCJjb2RlIiwgW192bS5fdigncGFja2FnZSBjb20ubXlnZHguZ2FtZS50Y3A7XG5cbmltcG9ydCBjb20uYmFkbG9naWMuZ2R4LkdkeDtcbmltcG9ydCBjb20uYmFkbG9naWMuZ2R4Lk5ldDtcbmltcG9ydCBjb20uYmFkbG9naWMuZ2R4Lm5ldC5Tb2NrZXQ7XG5pbXBvcnQgY29tLmJhZGxvZ2ljLmdkeC5uZXQuU29ja2V0SGludHM7XG5cbmltcG9ydCBqYXZhLmlvLk91dHB1dFN0cmVhbTtcblxucHVibGljIGNsYXNzIENsaWVudCBleHRlbmRzIFRocmVhZHtcbiAgICBAT3ZlcnJpZGVcbiAgICBwdWJsaWMgdm9pZCBydW4oKSB7XG4gICAgICAgIHJlY2VpdmVkVENQKCk7XG4gICAgfVxuXG4gICAgcHVibGljICB2b2lkIHJlY2VpdmVkVENQKCkge1xuICAgICAgICAvLyDliJvlu7rlrqLmiLfnq6/lpZfmjqXlrZdcbiAgICAgICAgU29ja2V0IHNvY2tldCA9IEdkeC5uZXQubmV3Q2xpZW50U29ja2V0KE5ldC5Qcm90b2NvbC5UQ1AsICJsb2NhbGhvc3QiLCA4MDgwLCBudWxsKTtcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8g6I635Y+W6L6T5Ye65rWBXG4gICAgICAgICAgICBPdXRwdXRTdHJlYW0gb3V0cHV0U3RyZWFtID0gc29ja2V0LmdldE91dHB1dFN0cmVhbSgpO1xuXG4gICAgICAgICAgICAvLyDlj5HpgIHmlbDmja7liLDmnI3liqHlmahcbiAgICAgICAgICAgIG91dHB1dFN0cmVhbS53cml0ZSgiSGVsbG8sIHNlcnZlciEiLmdldEJ5dGVzKCkpO1xuICAgICAgICAgICAgb3V0cHV0U3RyZWFtLmZsdXNoKCk7XG4gICAgICAgICAgICAvLyDor7vlj5bmnI3liqHlmajlk43lupRcbiAgICAgICAgICAgIGJ5dGVbXSBkYXRhID0gbmV3IGJ5dGVbMTAyNF07XG4gICAgICAgICAgICBpbnQgbGVuZ3RoID0gc29ja2V0LmdldElucHV0U3RyZWFtKCkucmVhZChkYXRhKTtcbiAgICAgICAgICAgIFN0cmluZyBtZXNzYWdlID0gbmV3IFN0cmluZyhkYXRhLCAwLCBsZW5ndGgpO1xuICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKCJSZWNlaXZlZCBmcm9tIHNlcnZlcjogIiArIG1lc3NhZ2UpO1xuICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkge1xuICAgICAgICAgICAgZS5wcmludFN0YWNrVHJhY2UoKTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIC8vIOWFs+mXreWuouaIt+err+Wll+aOpeWtl1xuICAgICAgICAgICAgc29ja2V0LmRpc3Bvc2UoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuJyldKV0pXSksIF9jKCJoMiIsIHsKICAgIGF0dHJzOiB7CiAgICAgIGlkOiAidGNw6YCa5L+hLeacjeWKoeerryIKICAgIH0KICB9LCBbX2MoImEiLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgaHJlZjogIiN0Y3DpgJrkv6Et5pyN5Yqh56uvIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBUQ1DpgJrkv6HvvIzmnI3liqHnq68iKV0pLCBfdm0uX3YoIiAiKSwgX2MoImRpdiIsIHsKICAgIHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtIGV4dHJhLWNsYXNzIgogIH0sIFtfYygicHJlIiwgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgY2xhc3M6ICJsYW5ndWFnZS10ZXh0IgogICAgfQogIH0sIFtfYygiY29kZSIsIFtfdm0uX3YoJ3BhY2thZ2UgY29tLm15Z2R4LmdhbWUudGNwO1xuXG5pbXBvcnQgY29tLmJhZGxvZ2ljLmdkeC5HZHg7XG5pbXBvcnQgY29tLmJhZGxvZ2ljLmdkeC5OZXQ7XG5pbXBvcnQgY29tLmJhZGxvZ2ljLmdkeC5uZXQuU2VydmVyU29ja2V0O1xuaW1wb3J0IGNvbS5iYWRsb2dpYy5nZHgubmV0LlNvY2tldDtcbmltcG9ydCBjb20uYmFkbG9naWMuZ2R4Lm5ldC5Tb2NrZXRIaW50cztcblxuaW1wb3J0IGphdmEuaW8uT3V0cHV0U3RyZWFtO1xuXG5wdWJsaWMgY2xhc3MgU2VydmVyIGV4dGVuZHMgVGhyZWFkIHtcbiAgICBAT3ZlcnJpZGVcbiAgICBwdWJsaWMgdm9pZCBydW4oKSB7XG4gICAgICAgIG9wZW5UY3AoKTtcbiAgICB9XG5cbiAgICBwdWJsaWMgIHZvaWQgb3BlblRjcCgpIHtcbiAgICAgICAgLy8g5Yib5bu65pyN5Yqh56uv5aWX5o6l5a2XXG4gICAgICAgIFNlcnZlclNvY2tldCBzZXJ2ZXJTb2NrZXQgPSBHZHgubmV0Lm5ld1NlcnZlclNvY2tldChOZXQuUHJvdG9jb2wuVENQLCA4MDgwLCBudWxsKTtcblxuICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgLy8g562J5b6F5a6i5oi356uv6L+e5o6lXG4gICAgICAgICAgICBTb2NrZXQgc29ja2V0ID0gc2VydmVyU29ja2V0LmFjY2VwdChudWxsKTtcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAvLyDojrflj5bovpPlh7rmtYFcbiAgICAgICAgICAgICAgICBPdXRwdXRTdHJlYW0gb3V0cHV0U3RyZWFtID0gc29ja2V0LmdldE91dHB1dFN0cmVhbSgpO1xuXG4gICAgICAgICAgICAgICAgLy8g6K+75Y+W5a6i5oi356uv5Y+R6YCB55qE5pWw5o2uXG4gICAgICAgICAgICAgICAgYnl0ZVtdIGRhdGEgPSBuZXcgYnl0ZVsxMDI0XTtcbiAgICAgICAgICAgICAgICBpbnQgbGVuZ3RoID0gc29ja2V0LmdldElucHV0U3RyZWFtKCkucmVhZChkYXRhKTtcbiAgICAgICAgICAgICAgICBTdHJpbmcgbWVzc2FnZSA9IG5ldyBTdHJpbmcoZGF0YSwgMCwgbGVuZ3RoKTtcbiAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oIlJlY2VpdmVkIGZyb20gY2xpZW50OiAiICsgbWVzc2FnZSk7XG5cbiAgICAgICAgICAgICAgICAvLyDlkJHlrqLmiLfnq6/lj5HpgIHlk43lupRcbiAgICAgICAgICAgICAgICBvdXRwdXRTdHJlYW0ud3JpdGUoIkhlbGxvLCBjbGllbnQhIi5nZXRCeXRlcygpKTtcbiAgICAgICAgICAgICAgICBvdXRwdXRTdHJlYW0uZmx1c2goKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7XG4gICAgICAgICAgICAgICAgZS5wcmludFN0YWNrVHJhY2UoKTtcbiAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgLy8g5YWz6Zet5a6i5oi356uv5aWX5o6l5a2XXG4gICAgICAgICAgICAgICAgc29ja2V0LmRpc3Bvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuJyldKV0pXSldKTsKfTsKdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdOwpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWU7CmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH07"},{"version":3,"names":["render","_vm","_c","_self","attrs","$parent","slotKey","id","staticClass","href","_v","pre","class","staticRenderFns","_withStripped"],"sources":["D:/githubWork/githubappearance/JavaLearnNote/JavaLearnNoteServe/docs/libgdx/tutorial7.md"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"ContentSlotsDistributor\",\n    { attrs: { \"slot-key\": _vm.$parent.slotKey } },\n    [\n      _c(\"h2\", { attrs: { id: \"_7-1-http请求\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#_7-1-http请求\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 7.1 HTTP请求\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"在libGDX中，可以使用HttpRequest类来发送HTTP请求。以下是一个简单的示例：\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              'package com.mygdx.game.http;\\n\\nimport com.badlogic.gdx.Gdx;\\nimport com.badlogic.gdx.Net;\\nimport com.badlogic.gdx.net.HttpRequestBuilder;\\nimport com.badlogic.gdx.net.HttpStatus;\\n\\npublic class HttpExample {\\n    public static void send() {\\n        HttpRequestBuilder requestBuilder = new HttpRequestBuilder();\\n        Net.HttpRequest httpRequest = requestBuilder.newRequest().method(Net.HttpMethods.GET).url(\"https://www.google.de\").content(\"q=libgdx&example=example\").build();\\n        Gdx.net.sendHttpRequest(httpRequest, httpResponseListener);\\n        //有参数的\\n//        HttpRequestBuilder requestBuilder = new HttpRequestBuilder();\\n//        HttpRequest httpRequest = requestBuilder.newRequest().method(HttpMethods.GET).url(\"https://www.google.de\").content(\"q=libgdx&example=example\").build();\\n//        Gdx.net.sendHttpRequest(httpRequest, httpResponseListener);\\n\\n    }\\n\\n    private static final Net.HttpResponseListener httpResponseListener = new Net.HttpResponseListener() {\\n        @Override\\n        public void handleHttpResponse(Net.HttpResponse httpResponse) {\\n            if (httpResponse.getStatus().getStatusCode() == HttpStatus.SC_OK) {\\n                System.out.println(\"请求成功，响应内容：\" + httpResponse.getResultAsString());\\n            } else {\\n                System.out.println(\"请求失败，状态码：\" + httpResponse.getStatus().getStatusCode());\\n            }\\n        }\\n\\n        @Override\\n        public void failed(Throwable throwable) {\\n            System.out.println(\"失败\");\\n        }\\n\\n        @Override\\n        public void cancelled() {\\n            System.out.println(\"取消\");\\n        }\\n    };\\n\\n}\\n'\n            ),\n          ]),\n        ]),\n      ]),\n      _c(\"h2\", { attrs: { id: \"tcp通信-客户端\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#tcp通信-客户端\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" TCP通信，客户端\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              'package com.mygdx.game.tcp;\\n\\nimport com.badlogic.gdx.Gdx;\\nimport com.badlogic.gdx.Net;\\nimport com.badlogic.gdx.net.Socket;\\nimport com.badlogic.gdx.net.SocketHints;\\n\\nimport java.io.OutputStream;\\n\\npublic class Client extends Thread{\\n    @Override\\n    public void run() {\\n        receivedTCP();\\n    }\\n\\n    public  void receivedTCP() {\\n        // 创建客户端套接字\\n        Socket socket = Gdx.net.newClientSocket(Net.Protocol.TCP, \"localhost\", 8080, null);\\n\\n        try {\\n            // 获取输出流\\n            OutputStream outputStream = socket.getOutputStream();\\n\\n            // 发送数据到服务器\\n            outputStream.write(\"Hello, server!\".getBytes());\\n            outputStream.flush();\\n            // 读取服务器响应\\n            byte[] data = new byte[1024];\\n            int length = socket.getInputStream().read(data);\\n            String message = new String(data, 0, length);\\n            System.out.println(\"Received from server: \" + message);\\n        } catch (Exception e) {\\n            e.printStackTrace();\\n        } finally {\\n            // 关闭客户端套接字\\n            socket.dispose();\\n        }\\n    }\\n}\\n\\n'\n            ),\n          ]),\n        ]),\n      ]),\n      _c(\"h2\", { attrs: { id: \"tcp通信-服务端\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#tcp通信-服务端\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" TCP通信，服务端\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language- extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              'package com.mygdx.game.tcp;\\n\\nimport com.badlogic.gdx.Gdx;\\nimport com.badlogic.gdx.Net;\\nimport com.badlogic.gdx.net.ServerSocket;\\nimport com.badlogic.gdx.net.Socket;\\nimport com.badlogic.gdx.net.SocketHints;\\n\\nimport java.io.OutputStream;\\n\\npublic class Server extends Thread {\\n    @Override\\n    public void run() {\\n        openTcp();\\n    }\\n\\n    public  void openTcp() {\\n        // 创建服务端套接字\\n        ServerSocket serverSocket = Gdx.net.newServerSocket(Net.Protocol.TCP, 8080, null);\\n\\n        while (true) {\\n            // 等待客户端连接\\n            Socket socket = serverSocket.accept(null);\\n\\n            try {\\n                // 获取输出流\\n                OutputStream outputStream = socket.getOutputStream();\\n\\n                // 读取客户端发送的数据\\n                byte[] data = new byte[1024];\\n                int length = socket.getInputStream().read(data);\\n                String message = new String(data, 0, length);\\n                System.out.println(\"Received from client: \" + message);\\n\\n                // 向客户端发送响应\\n                outputStream.write(\"Hello, client!\".getBytes());\\n                outputStream.flush();\\n            } catch (Exception e) {\\n                e.printStackTrace();\\n            } finally {\\n                // 关闭客户端套接字\\n                socket.dispose();\\n            }\\n        }\\n    }\\n}\\n\\n'\n            ),\n          ]),\n        ]),\n      ]),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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","ignoreList":[]}]}