{"remainingRequest":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\docs\\libgdx\\tutorial6.md?vue&type=template&id=acf2bcb0","dependencies":[{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\docs\\libgdx\\tutorial6.md","mtime":1708184263161},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\githubWork\\githubappearance\\JavaLearnNote\\JavaLearnNoteServe\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}